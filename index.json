[
  
    {
      "id": "/posts/0870e5ba-250722-222009/",
      "title": "second_post",
      "summary": "学习在几分钟内创建一个 Hugo FixIt 站点。\n",
      "content": "学习在几分钟内创建一个 Hugo FixIt 站点。\n标题 1 在本教程中，你将学会：\n创建站点 添加内容 配置站点 发布站点 shortcode 视频嵌入测试：\n先决条件 技巧 如果这是你第一次使用 Hugo，我们强烈建议你通过阅读这篇 入门文档 来更多地了解它。 在开始本教程之前，你必须： 你还必须熟悉使用命令行。\n创建网站 提示\n接下来的步骤将一步步指导你创建一个 Hugo 网站。\n如果你已经熟悉 Hugo，可以跳过这些步骤，使用 [FixIt CLI][fixit-cli] 来快速创建一个网站。\n命令 验证你是否安装了 Hugo 或更高版本。\n1 hugo version 运行以下命令来创建一个带有 [FixIt][fixit] 主题的 Hugo 网站。下一节将对每个命令进行解释。\n1 2 3 4 5 6 7 hugo new site my-blog cd my-blog git init git submodule add https://github.com/hugo-fixit/FixIt.git themes/FixIt echo \u0026#34;theme = \u0026#39;FixIt\u0026#39;\u0026#34; \u0026gt;\u0026gt; hugo.toml echo \u0026#34;defaultContentLanguage = \u0026#39;zh-cn\u0026#39;\u0026#34; \u0026gt;\u0026gt; hugo.toml hugo server 通过终端中显示的 URL 查看你的站点。按 Ctrl + C 停止 Hugo 的开发服务器。\n命令解释 在 my-blog 目录中为你的项目创建 [目录结构骨架][directory-structure]。\n1 hugo new site my-blog 将当前目录更改为项目的根目录。\n1 cd my-blog 在当前目录中初始化一个空的 Git 存储库。\n1 git init 将 [FixIt][fixit] 主题作为 [Git 子模块][git-submodule] 添加到你的项目中的 themes 目录。\n1 git submodule add https://github.com/hugo-fixit/FixIt.git themes/FixIt 在站点配置文件中添加一行，指定当前主题。\n1 echo \u0026#34;theme = \u0026#39;FixIt\u0026#39;\u0026#34; \u0026gt;\u0026gt; hugo.toml 在站点配置文件中添加一行，指定默认的内容语言。\n1 echo \u0026#34;defaultContentLanguage = \u0026#39;zh-cn\u0026#39;\u0026#34; \u0026gt;\u0026gt; hugo.toml 启动 Hugo 的开发服务器以查看站点。\n1 hugo server 按 Ctrl + C 停止 Hugo 的开发服务器。\n必要配置 为了能完整地使用 FixIt 主题的所有功能，务必在站点配置文件中添加以下内容。\n1 2 3 4 5 6 [markup] _merge = \u0026#34;shallow\u0026#34; [outputs] _merge = \u0026#34;shallow\u0026#34; [taxonomies] _merge = \u0026#34;shallow\u0026#34; 以上配置表示继承 FixIt 主题的 markup，outputs 和 taxonomies 配置。\n提示\n在阅读完本文快速上手后，你可以参考 [配置篇][configuration] 来了解完整的主题配置。\n添加内容 给你的网站添加新页面。\n1 hugo new content posts/my-first-post.md Hugo 在 content/posts 目录中创建了该文件，使用编辑器打开文件。\n1 2 3 4 5 6 --- title: 我的第一篇文章 date: 2024-03-01T17:10:04+08:00 draft: true # ... --- 请注意，[front matter][front-matter] 中的 draft 值为 true。默认情况下，Hugo 在你构建网站时不会发布草稿内容。详细了解 [草稿、未来和过期内容][draft-future-and-expired-content]。\n在帖子正文中添加一些 [Markdown][commonmark]，但不要更改 draft 值。\n1 2 3 4 5 6 7 8 --- title: 我的第一篇文章 date: 2024-03-01T17:10:04+08:00 draft: true # ... --- 博客（英语：Blog）是一种在线日记型式的个人网站，借由张帖子章、图片或视频来记录生活、抒发情感或分享信息。博客上的文章通常根据张贴时间，以倒序方式由新到旧排列。 保存文件，然后启动 Hugo 的开发服务器来查看站点。你可以运行以下任一命令来包含草稿内容。\n1 2 3 hugo server --buildDrafts hugo server -D hugo server -D --disableFastRender 由于本主题使用了 Hugo 中的 .Store 来实现一些特性， 非常建议你为 hugo server 命令添加 --disableFastRender 参数来实时预览你正在编辑的文章页面。\n基本配置下的预览 当对新内容感到满意时，将 front matter 中的 draft 值更改为 false，然后保存文件。\n1 2 3 4 5 6 7 8 9 10 11 12 13 echo 111 echo 111 echo 111 echo 111 echo 111 echo 111 echo 111 echo 111 echo 111 echo 111 echo 111 echo 111 echo 111 发布网站 在此步骤中，你将发布你的网站，但不会 部署 它。\n当你发布站点时，Hugo 在项目根目录的 public 目录中创建整个静态站点。这包括 HTML 文件以及图像、CSS 文件和 JavaScript 文件等资源。\n当你发布网站时，你通常不希望包含 [草稿、未来或过期的内容][draft-future-and-expired-content]，命令很简单。\n1 hugo 我们的大多数用户使用 CI/CD 工作流程部署他们的网站，通过推送 [^1] 到他们的 GitHub 或 GitLab 存储库会触发构建和部署。流行的提供商包括 [Vercel][vercel][^2]、[Netlify][netlify][^3]、[AWS Amplify][amplify]、[CloudCannon][cloudcannon]、[Cloudflare Pages][cf-pages]、 [GitHub pages][gh-pages] 和 [GitLab pages][gl-pages]。\n要了解如何部署站点，请参阅 [托管和部署][hosting-and-deployment] 部分。\n文档指南 我们强烈建议你花少量时间完整阅读 FixIt 主题的文档，以便你更好地了解如何使用它。\n[安装篇][installation] [入门篇][getting-started] [内容管理][content-management] [进阶篇][advanced] ",
      "url": "/posts/0870e5ba-250722-222009/",
      "tags": [
        
      ]
    }
  ,
    {
      "id": "/posts/036ecf4d-250722-214654/",
      "title": "模板测试01",
      "summary": "50 字内摘要\u0026hellip;\u0026hellip;\n",
      "content": "50 字内摘要\u0026hellip;\u0026hellip;\n1 一级标题 123 345\n11 22 33 44 55 66 1 2 echo 112233 echo 445566 行内代码：echo aaabbbccc\n1.1 二级标题 123 234\n1.1.1 三级标题 123 234\n有序列表：\naaa bbb ccc 无需列表\naaa bbb ccc 待办事项\naaa bbb ccc ",
      "url": "/posts/036ecf4d-250722-214654/",
      "tags": [
        
      ]
    }
  ,
    {
      "id": "/posts/d0fdf5a7-250722-214654/",
      "title": "模板测试02",
      "summary": "50 字内摘要\u0026hellip;\u0026hellip;\n",
      "content": "50 字内摘要\u0026hellip;\u0026hellip;\n1 一级标题 123\n234\n1.1 二级标题 123 234\n1.1.1 三级标题 123 234\n",
      "url": "/posts/d0fdf5a7-250722-214654/",
      "tags": [
        
      ]
    }
  ,
    {
      "id": "/posts/8bd8d7a7-250721-200413/",
      "title": "first_post",
      "summary": "学习在几分钟内创建一个 Hugo FixIt 站点。\n",
      "content": "学习在几分钟内创建一个 Hugo FixIt 站点。\n外部链接图标测试：\nhttps://www.baidu.com\n行内代码测试:\n高亮: ==echo==\n行内代码: echo 222\n标题 1 在本教程中，你将学会：\n创建站点 添加内容 配置站点 发布站点 shortcode 视频嵌入测试：\n1 echo \u0026#34;This is bash\u0026#34; 1 echo \u0026#34;This is also bash\u0026#34; 1 2 3 echo \u0026#34;This is bash too\u0026#34; echo $PATH docker ps -a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 #!/bin/bash target_dir=\u0026#34;/opt/lbex/\u0026#34; download_url=\u0026#34;https://github.com/flashcatcloud/ibex/releases/download/v1.0.0/ibex-1.0.0.tar.gz\u0026#34; mkdir -p ${target_dir} \u0026amp;\u0026amp; cd ${target_dir} wget ${download_url} tar zxvf ibex*.tar.gz mv ibex-*.tar.gz /tmp mysql -uroot -p1234 \u0026lt; ./sql/ibex.sql # ibex-server启动 cat \u0026lt;\u0026lt; EOF \u0026gt; ${target_dir}restart_ibex_server.sh #!/bin/bash for mod in \\$(ps -ef | grep \u0026#34;${target_dir}ibex server\u0026#34; | grep -v grep | awk \u0026#39;{print \\$2}\u0026#39;) do echo \\$mod kill -9 \\$mod done nohup ${target_dir}ibex server \u0026amp;\u0026gt;\u0026gt; ${target_dir}server.log \u0026amp; EOF chmod +x ${target_dir}restart_ibex_server.sh \u0026amp;\u0026amp; sh ${target_dir}restart_ibex_server.sh # ibex-agent启动 sed -i \u0026#39;s/Host = \\\u0026#34;\\$hostname\\\u0026#34;/hostname = \\\u0026#34;\\$ip\\\u0026#34;/i\u0026#39; ./etc/agentd.conf cat \u0026lt;\u0026lt; EOF \u0026gt; ${target_dir}restart_ibex_agentd.sh #!/bin/bash for mod in \\$(ps -ef | grep \u0026#34;${target_dir}ibex agentd\u0026#34; | grep -v grep | awk \u0026#39;{print \\$2}\u0026#39;) do echo \\$mod kill -9 \\$mod done nohup ${target_dir}ibex agentd \u0026amp;\u0026gt;\u0026gt; ${target_dir}agentd.log \u0026amp; EOF chmod +x ${target_dir}restart_ibex_agentd.sh \u0026amp;\u0026amp; sh ${target_dir}restart_ibex_agentd.sh 头 1 头 3 头 3 11 12 13 21 22 23 31 32 33 先决条件 技巧 如果这是你第一次使用 Hugo，我们强烈建议你通过阅读这篇 入门文档 来更多地了解它。 在开始本教程之前，你必须：\n你还必须熟悉使用命令行。\n创建网站 提示\n接下来的步骤将一步步指导你创建一个 Hugo 网站。\n如果你已经熟悉 Hugo，可以跳过这些步骤，使用 [FixIt CLI][fixit-cli] 来快速创建一个网站。\n命令 验证你是否安装了 Hugo 或更高版本。\n1 hugo version 运行以下命令来创建一个带有 [FixIt][fixit] 主题的 Hugo 网站。下一节将对每个命令进行解释。\n1 2 3 4 5 6 7 hugo new site my-blog cd my-blog git init git submodule add https://github.com/hugo-fixit/FixIt.git themes/FixIt echo \u0026#34;theme = \u0026#39;FixIt\u0026#39;\u0026#34; \u0026gt;\u0026gt; hugo.toml echo \u0026#34;defaultContentLanguage = \u0026#39;zh-cn\u0026#39;\u0026#34; \u0026gt;\u0026gt; hugo.toml hugo server 通过终端中显示的 URL 查看你的站点。按 Ctrl + C 停止 Hugo 的开发服务器。\n命令解释 在 my-blog 目录中为你的项目创建 [目录结构骨架][directory-structure]。\n1 hugo new site my-blog 将当前目录更改为项目的根目录。\n1 cd my-blog 在当前目录中初始化一个空的 Git 存储库。\n1 git init 将 [FixIt][fixit] 主题作为 [Git 子模块][git-submodule] 添加到你的项目中的 themes 目录。\n1 git submodule add https://github.com/hugo-fixit/FixIt.git themes/FixIt 在站点配置文件中添加一行，指定当前主题。\n1 echo \u0026#34;theme = \u0026#39;FixIt\u0026#39;\u0026#34; \u0026gt;\u0026gt; hugo.toml 在站点配置文件中添加一行，指定默认的内容语言。\n1 echo \u0026#34;defaultContentLanguage = \u0026#39;zh-cn\u0026#39;\u0026#34; \u0026gt;\u0026gt; hugo.toml 启动 Hugo 的开发服务器以查看站点。\n1 hugo server 按 Ctrl + C 停止 Hugo 的开发服务器。\n必要配置 为了能完整地使用 FixIt 主题的所有功能，务必在站点配置文件中添加以下内容。\n1 2 3 4 5 6 [markup] _merge = \u0026#34;shallow\u0026#34; [outputs] _merge = \u0026#34;shallow\u0026#34; [taxonomies] _merge = \u0026#34;shallow\u0026#34; 以上配置表示继承 FixIt 主题的 markup，outputs 和 taxonomies 配置。\n提示\n在阅读完本文快速上手后，你可以参考 [配置篇][configuration] 来了解完整的主题配置。\n添加内容 给你的网站添加新页面。\n1 hugo new content posts/my-first-post.md Hugo 在 content/posts 目录中创建了该文件，使用编辑器打开文件。\n1 2 3 4 5 6 --- title: 我的第一篇文章 date: 2024-03-01T17:10:04+08:00 draft: true # ... --- 请注意，[front matter][front-matter] 中的 draft 值为 true。默认情况下，Hugo 在你构建网站时不会发布草稿内容。详细了解 [草稿、未来和过期内容][draft-future-and-expired-content]。\n在帖子正文中添加一些 [Markdown][commonmark]，但不要更改 draft 值。\n1 2 3 4 5 6 7 8 --- title: 我的第一篇文章 date: 2024-03-01T17:10:04+08:00 draft: true # ... --- 博客（英语：Blog）是一种在线日记型式的个人网站，借由张帖子章、图片或视频来记录生活、抒发情感或分享信息。博客上的文章通常根据张贴时间，以倒序方式由新到旧排列。 保存文件，然后启动 Hugo 的开发服务器来查看站点。你可以运行以下任一命令来包含草稿内容。\n1 2 3 hugo server --buildDrafts hugo server -D hugo server -D --disableFastRender 由于本主题使用了 Hugo 中的 .Store 来实现一些特性，\n非常建议你为 hugo server 命令添加 --disableFastRender 参数来实时预览你正在编辑的文章页面。\n基本配置下的预览 当对新内容感到满意时，将 front matter 中的 draft 值更改为 false，然后保存文件。\n1 2 3 4 5 6 7 8 9 10 11 12 13 echo 111 echo 111 echo 111 echo 111 echo 111 echo 111 echo 111 echo 111 echo 111 echo 111 echo 111 echo 111 echo 111 发布网站 在此步骤中，你将发布你的网站，但不会 部署 它。\n当你发布站点时，Hugo 在项目根目录的 public 目录中创建整个静态站点。这包括 HTML 文件以及图像、CSS 文件和 JavaScript 文件等资源。\n当你发布网站时，你通常不希望包含 [草稿、未来或过期的内容][draft-future-and-expired-content]，命令很简单。\n1 hugo 我们的大多数用户使用 CI/CD 工作流程部署他们的网站，通过推送 [^1] 到他们的 GitHub 或 GitLab 存储库会触发构建和部署。流行的提供商包括 [Vercel][vercel][^2]、[Netlify][netlify][^3]、[AWS Amplify][amplify]、[CloudCannon][cloudcannon]、[Cloudflare Pages][cf-pages]、 [GitHub pages][gh-pages] 和 [GitLab pages][gl-pages]。\n要了解如何部署站点，请参阅 [托管和部署][hosting-and-deployment] 部分。\n文档指南 我们强烈建议你花少量时间完整阅读 FixIt 主题的文档，以便你更好地了解如何使用它。\n[安装篇][installation] [入门篇][getting-started] [内容管理][content-management] [进阶篇][advanced] ",
      "url": "/posts/8bd8d7a7-250721-200413/",
      "tags": [
        
      ]
    }
  ,
    {
      "id": "/posts/d21803a3-250721-200413/",
      "title": "my-first-post",
      "summary": "学习在几分钟内创建一个 Hugo FixIt 站点。\n",
      "content": "学习在几分钟内创建一个 Hugo FixIt 站点。\n在本教程中，你将学会：\n创建站点 添加内容 配置站点 发布站点 先决条件 技巧 如果这是你第一次使用 Hugo，我们强烈建议你通过阅读这篇 入门文档 来更多地了解它。 在开始本教程之前，你必须：\n你还必须熟悉使用命令行。\n创建网站 提示\n接下来的步骤将一步步指导你创建一个 Hugo 网站。\n如果你已经熟悉 Hugo，可以跳过这些步骤，使用 [FixIt CLI][fixit-cli] 来快速创建一个网站。\n命令 验证你是否安装了 Hugo 或更高版本。\n1 hugo version 运行以下命令来创建一个带有 [FixIt][fixit] 主题的 Hugo 网站。下一节将对每个命令进行解释。\n1 2 3 4 5 6 7 hugo new site my-blog cd my-blog git init git submodule add https://github.com/hugo-fixit/FixIt.git themes/FixIt echo \u0026#34;theme = \u0026#39;FixIt\u0026#39;\u0026#34; \u0026gt;\u0026gt; hugo.toml echo \u0026#34;defaultContentLanguage = \u0026#39;zh-cn\u0026#39;\u0026#34; \u0026gt;\u0026gt; hugo.toml hugo server 通过终端中显示的 URL 查看你的站点。按 Ctrl + C 停止 Hugo 的开发服务器。\n命令解释 在 my-blog 目录中为你的项目创建 [目录结构骨架][directory-structure]。\n1 hugo new site my-blog 将当前目录更改为项目的根目录。\n1 cd my-blog 在当前目录中初始化一个空的 Git 存储库。\n1 git init 将 [FixIt][fixit] 主题作为 [Git 子模块][git-submodule] 添加到你的项目中的 themes 目录。\n1 git submodule add https://github.com/hugo-fixit/FixIt.git themes/FixIt 在站点配置文件中添加一行，指定当前主题。\n1 echo \u0026#34;theme = \u0026#39;FixIt\u0026#39;\u0026#34; \u0026gt;\u0026gt; hugo.toml 在站点配置文件中添加一行，指定默认的内容语言。\n1 echo \u0026#34;defaultContentLanguage = \u0026#39;zh-cn\u0026#39;\u0026#34; \u0026gt;\u0026gt; hugo.toml 启动 Hugo 的开发服务器以查看站点。\n1 hugo server 按 Ctrl + C 停止 Hugo 的开发服务器。\n必要配置 为了能完整地使用 FixIt 主题的所有功能，务必在站点配置文件中添加以下内容。\n1 2 3 4 5 6 [markup] _merge = \u0026#34;shallow\u0026#34; [outputs] _merge = \u0026#34;shallow\u0026#34; [taxonomies] _merge = \u0026#34;shallow\u0026#34; 以上配置表示继承 FixIt 主题的 markup，outputs 和 taxonomies 配置。\n提示\n在阅读完本文快速上手后，你可以参考 [配置篇][configuration] 来了解完整的主题配置。\n添加内容 给你的网站添加新页面。\n1 hugo new content posts/my-first-post.md Hugo 在 content/posts 目录中创建了该文件，使用编辑器打开文件。\n1 2 3 4 5 6 --- title: 我的第一篇文章 date: 2024-03-01T17:10:04+08:00 draft: true # ... --- 请注意，[front matter][front-matter] 中的 draft 值为 true。默认情况下，Hugo 在你构建网站时不会发布草稿内容。详细了解 [草稿、未来和过期内容][draft-future-and-expired-content]。\n在帖子正文中添加一些 [Markdown][commonmark]，但不要更改 draft 值。\n1 2 3 4 5 6 7 8 --- title: 我的第一篇文章 date: 2024-03-01T17:10:04+08:00 draft: true # ... --- 博客（英语：Blog）是一种在线日记型式的个人网站，借由张帖子章、图片或视频来记录生活、抒发情感或分享信息。博客上的文章通常根据张贴时间，以倒序方式由新到旧排列。 保存文件，然后启动 Hugo 的开发服务器来查看站点。你可以运行以下任一命令来包含草稿内容。\n1 2 3 hugo server --buildDrafts hugo server -D hugo server -D --disableFastRender 由于本主题使用了 Hugo 中的 .Store 来实现一些特性，\n非常建议你为 hugo server 命令添加 --disableFastRender 参数来实时预览你正在编辑的文章页面。\n基本配置下的预览 当对新内容感到满意时，将 front matter 中的 draft 值更改为 false，然后保存文件。\n发布网站 在此步骤中，你将发布你的网站，但不会 部署 它。\n当你发布站点时，Hugo 在项目根目录的 public 目录中创建整个静态站点。这包括 HTML 文件以及图像、CSS 文件和 JavaScript 文件等资源。\n当你发布网站时，你通常不希望包含 [草稿、未来或过期的内容][draft-future-and-expired-content]，命令很简单。\n1 hugo 我们的大多数用户使用 CI/CD 工作流程部署他们的网站，通过推送 [^1] 到他们的 GitHub 或 GitLab 存储库会触发构建和部署。流行的提供商包括 [Vercel][vercel][^2]、[Netlify][netlify][^3]、[AWS Amplify][amplify]、[CloudCannon][cloudcannon]、[Cloudflare Pages][cf-pages]、 [GitHub pages][gh-pages] 和 [GitLab pages][gl-pages]。\n要了解如何部署站点，请参阅 [托管和部署][hosting-and-deployment] 部分。\n文档指南 我们强烈建议你花少量时间完整阅读 FixIt 主题的文档，以便你更好地了解如何使用它。\n[安装篇][installation] [入门篇][getting-started] [内容管理][content-management] [进阶篇][advanced] 嘿嘿\nFirst_post ",
      "url": "/posts/d21803a3-250721-200413/",
      "tags": [
        
      ]
    }
  ,
    {
      "id": "/friends/",
      "title": "Index",
      "summary": " Base info nickname: Lruihao avatar: https://lruihao.cn/images/avatar.jpg url: https://lruihao.cn description: Lruihao\u0026rsquo;s Note Friendly Reminder Comment like this:\n",
      "content": " Base info nickname: Lruihao avatar: https://lruihao.cn/images/avatar.jpg url: https://lruihao.cn description: Lruihao\u0026rsquo;s Note Friendly Reminder Comment like this:\n1 2 3 4 5 6 ```yaml - nickname: \u0026lt;your nickname\u0026gt; avatar: \u0026lt;your avatar\u0026gt; url: \u0026lt;your site link\u0026gt; description: \u0026lt;description of your site\u0026gt; ``` Notice If you want to exchange link, please leave a comment as the above format. (personal non-commercial blogs / websites only) :(fa-solid fa-exclamation-triangle): Website failure, stop maintenance and improper content may be unlinked! Those websites that do not respect other people\u0026rsquo;s labor achievements, reprint without source, or malicious acts, please do not come to exchange. ",
      "url": "/friends/",
      "tags": [
        
      ]
    }
  ,
    {
      "id": "/search/",
      "title": "搜索",
      "summary": "",
      "content": "",
      "url": "/search/",
      "tags": [
        
      ]
    }
  
]